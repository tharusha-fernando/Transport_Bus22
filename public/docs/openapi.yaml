openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/bus-station/buses:
    get:
      summary: "Get a list of buses.\n\nThis endpoint allows you to retrieve a list of buses associated with the authenticated user's bus station."
      operationId: getAListOfBusesThisEndpointAllowsYouToRetrieveAListOfBusesAssociatedWithTheAuthenticatedUsersBusStation
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'The search query. (e.g., "ABC123")'
          example: ut
          required: false
          schema:
            type: string
            description: 'The search query. (e.g., "ABC123")'
            example: ut
        -
          in: query
          name: search_by
          description: 'The field to search by. Possible values: "license_plate", "model", "owner_name".'
          example: illo
          required: false
          schema:
            type: string
            description: 'The field to search by. Possible values: "license_plate", "model", "owner_name".'
            example: illo
        -
          in: query
          name: order_by
          description: 'The field to order by. Possible values: "asc", "desc".'
          example: molestias
          required: false
          schema:
            type: string
            description: 'The field to order by. Possible values: "asc", "desc".'
            example: molestias
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"current_page\": 1,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"license_plate\": \"ABC123\",\n            \"model\": \"Bus Model\",\n            \"owner_name\": \"Owner Name\",\n            \"bus_station_id\": 1,\n            \"created_at\": \"2022-01-01 00:00:00\",\n            \"updated_at\": \"2022-01-01 00:00:00\"\n        },\n        ...\n    ],\n    \"first_page_url\": \"...\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"...\",\n    \"next_page_url\": null,\n    \"path\": \"...\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 3,\n    \"total\": 3\n}"
      tags:
        - 'Bus Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                  description: ''
                  example: ipsa
                search_by:
                  type: string
                  description: 'Must be one of <code>license_plate</code>, <code>model</code>, or <code>owner_name</code>.'
                  example: model
                order_by:
                  type: string
                  description: 'Must be one of <code>asc</code> or <code>desc</code>.'
                  example: asc
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                license_plate:
                  type: string
                  description: ''
                  example: rerum
                model:
                  type: string
                  description: ''
                  example: omnis
                capacity:
                  type: string
                  description: ''
                  example: corporis
                owner_name:
                  type: string
                  description: ''
                  example: sunt
              required:
                - license_plate
                - model
                - capacity
      security: []
  /api/v1/bus-station/create-driver-user-user:
    post:
      summary: "Create a new driver user for a bus station.\n\nThis endpoint allows you to create a new driver user for a specific bus station.\nOnly Accessible by Station Operators or above"
      operationId: createANewDriverUserForABusStationThisEndpointAllowsYouToCreateANewDriverUserForASpecificBusStationOnlyAccessibleByStationOperatorsOrAbove
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    id: 1
                    name: 'John Doe'
                    email: johndoe@example.com
                    created_at: '2022-01-01 00:00:00'
                    updated_at: '2022-01-01 00:00:00'
                  token: xxxxxxxxxx
                  driver:
                    id: 1
                    name: 'Driver Name'
                    nic: '123456789'
                    age: 30
                    dob: '1992-01-01'
                    reg_number: ABC123
                    user_id: 1
                    created_at: '2022-01-01 00:00:00'
                    updated_at: '2022-01-01 00:00:00'
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: johndoe@example.com
                      created_at:
                        type: string
                        example: '2022-01-01 00:00:00'
                      updated_at:
                        type: string
                        example: '2022-01-01 00:00:00'
                  token:
                    type: string
                    example: xxxxxxxxxx
                  driver:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Driver Name'
                      nic:
                        type: string
                        example: '123456789'
                      age:
                        type: integer
                        example: 30
                      dob:
                        type: string
                        example: '1992-01-01'
                      reg_number:
                        type: string
                        example: ABC123
                      user_id:
                        type: integer
                        example: 1
                      created_at:
                        type: string
                        example: '2022-01-01 00:00:00'
                      updated_at:
                        type: string
                        example: '2022-01-01 00:00:00'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Internal Server Error'
                  message: 'General Exception'
                properties:
                  error:
                    type: string
                    example: 'Internal Server Error'
                  message:
                    type: string
                    example: 'General Exception'
      tags:
        - 'Driver Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user.'
                  example: cupiditate
                email:
                  type: string
                  description: 'The email of the user.'
                  example: apadberg@example.net
                password:
                  type: string
                  description: 'The password of the user.'
                  example: 'P~sk+n"5y>*=#Ynnn4JJ'
                name_of_driver:
                  type: string
                  description: 'The name of the driver.'
                  example: quo
                nic:
                  type: string
                  description: 'The NIC (National Identity Card) of the driver.'
                  example: consequatur
                age:
                  type: integer
                  description: 'The age of the driver.'
                  example: 2
                dob:
                  type: date
                  description: 'The date of birth of the driver.'
                  example: numquam
                reg_number:
                  type: string
                  description: 'The registration number of the driver.'
                  example: delectus
              required:
                - name
                - email
                - password
                - name_of_driver
                - nic
                - age
                - dob
                - reg_number
  /api/v1/bus-station/drivers:
    get:
      summary: "Get a list of drivers.\n\nThis endpoint allows you to retrieve a list of drivers associated with the authenticated user's bus station."
      operationId: getAListOfDriversThisEndpointAllowsYouToRetrieveAListOfDriversAssociatedWithTheAuthenticatedUsersBusStation
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'The search query. (e.g., "John")'
          example: excepturi
          required: false
          schema:
            type: string
            description: 'The search query. (e.g., "John")'
            example: excepturi
        -
          in: query
          name: search_by
          description: 'The field to search by. Possible values: "nic", "name".'
          example: laboriosam
          required: false
          schema:
            type: string
            description: 'The field to search by. Possible values: "nic", "name".'
            example: laboriosam
        -
          in: query
          name: order_by
          description: 'The field to order by. Possible values: "asc", "desc".'
          example: aperiam
          required: false
          schema:
            type: string
            description: 'The field to order by. Possible values: "asc", "desc".'
            example: aperiam
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"current_page\": 1,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"Driver Name\",\n            \"nic\": \"123456789\",\n            \"age\": 30,\n            \"dob\": \"1992-01-01\",\n            \"reg_number\": \"ABC123\",\n            \"user_id\": 1,\n            \"created_at\": \"2022-01-01 00:00:00\",\n            \"updated_at\": \"2022-01-01 00:00:00\"\n        },\n        ...\n    ],\n    \"first_page_url\": \"...\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"...\",\n    \"next_page_url\": null,\n    \"path\": \"...\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 3,\n    \"total\": 3\n}"
      tags:
        - 'Driver Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                  description: ''
                  example: ullam
                search_by:
                  type: string
                  description: 'Must be one of <code>nic</code> or <code>name</code>.'
                  example: name
                order_by:
                  type: string
                  description: 'Must be one of <code>asc</code> or <code>desc</code>.'
                  example: asc
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Driver Management'
      security: []
  '/api/v1/bus-station/drivers/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Driver Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Driver Management'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Driver Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the driver.'
        example: impedit
        required: true
        schema:
          type: string
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/login:
    post:
      summary: ''
      operationId: postApiV1Login
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: eldora54@example.com
                password:
                  type: string
                  description: ''
                  example: '`;Wx#JI%*M\ST'
                remember:
                  type: boolean
                  description: ''
                  example: false
              required:
                - email
                - password
                - remember
      security: []
  /api/v1/routes:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 9973055d-39f2-4302-8402-30477ae02d6d
                      number: '33321242'
                      name: 'Mozell Spencer'
                      from: Langton
                      to: 'North Helenburgh'
                      distance: 528.63
                      time: 333601533
                      slug: '33321242'
                      created_at: '2023-06-19T16:41:42.000000Z'
                      updated_at: '2023-06-19T16:41:42.000000Z'
                    -
                      id: 9973055d-74e6-4a9f-9791-a5b8608f37ec
                      number: '7'
                      name: 'Trevion Streich'
                      from: Levistad
                      to: Dibbertbury
                      distance: 749.81
                      time: 227982835
                      slug: '7'
                      created_at: '2023-06-19T16:41:42.000000Z'
                      updated_at: '2023-06-19T16:41:42.000000Z'
                    -
                      id: 9973055d-abd7-48e6-970a-f47b50b5c084
                      number: '569'
                      name: 'Lamar Dickens'
                      from: 'West Tonyfurt'
                      to: 'South Ezra'
                      distance: 978.33
                      time: 1
                      slug: '569'
                      created_at: '2023-06-19T16:41:43.000000Z'
                      updated_at: '2023-06-19T16:41:43.000000Z'
                    -
                      id: 9973055e-7141-495b-9670-13c1e5818f78
                      number: '68115'
                      name: 'Maverick Bins PhD'
                      from: 'Port Jessicaview'
                      to: Windlerchester
                      distance: 26.19
                      time: 9
                      slug: '68115'
                      created_at: '2023-06-19T16:41:43.000000Z'
                      updated_at: '2023-06-19T16:41:43.000000Z'
                    -
                      id: 9973055e-848d-426b-b0ea-ae3d19f3cfc7
                      number: '836215997'
                      name: 'Aniya Moen'
                      from: 'North Sydney'
                      to: Pearlchester
                      distance: 481.22
                      time: 6
                      slug: '836215997'
                      created_at: '2023-06-19T16:41:43.000000Z'
                      updated_at: '2023-06-19T16:41:43.000000Z'
                    -
                      id: 9973055e-93de-4375-a015-96a96af4ec7c
                      number: '97308'
                      name: 'Bridgette Hoeger'
                      from: 'Port Malloryborough'
                      to: Welchfurt
                      distance: 600.97
                      time: 593
                      slug: '97308'
                      created_at: '2023-06-19T16:41:43.000000Z'
                      updated_at: '2023-06-19T16:41:43.000000Z'
                    -
                      id: 9973055e-a72b-4ed6-8201-cbf58210bf2e
                      number: '11075'
                      name: 'Clotilde Auer'
                      from: Dayneberg
                      to: 'Lake Federicofurt'
                      distance: 444.95
                      time: 3890447
                      slug: '11075'
                      created_at: '2023-06-19T16:41:43.000000Z'
                      updated_at: '2023-06-19T16:41:43.000000Z'
                    -
                      id: 9973055e-bac5-45bc-87b0-9d702540cf20
                      number: '47378'
                      name: 'Prof. Kristopher Nikolaus I'
                      from: Lemketown
                      to: Danielland
                      distance: 405.54
                      time: 505897
                      slug: '47378'
                      created_at: '2023-06-19T16:41:43.000000Z'
                      updated_at: '2023-06-19T16:41:43.000000Z'
                    -
                      id: 9973055e-ce0a-4fd2-ba2a-3717abcf1ba8
                      number: '598334576'
                      name: 'Dr. Maria Armstrong'
                      from: 'South Leslieland'
                      to: Ofeliaville
                      distance: 185.92
                      time: 50565
                      slug: '598334576'
                      created_at: '2023-06-19T16:41:43.000000Z'
                      updated_at: '2023-06-19T16:41:43.000000Z'
                    -
                      id: 9973055e-e1a7-4284-962c-94732f4ad3cb
                      number: '61097'
                      name: 'Stephon Stark'
                      from: Fredrickview
                      to: 'Port Ena'
                      distance: 817.14
                      time: 9123616
                      slug: '61097'
                      created_at: '2023-06-19T16:41:43.000000Z'
                      updated_at: '2023-06-19T16:41:43.000000Z'
                    -
                      id: 9973055e-f4f2-44da-b580-5b7bb86a9c01
                      number: '353662832'
                      name: 'Autumn Koch'
                      from: Jacobsshire
                      to: 'South Samara'
                      distance: 860.98
                      time: 295
                      slug: '353662832'
                      created_at: '2023-06-19T16:41:43.000000Z'
                      updated_at: '2023-06-19T16:41:43.000000Z'
                    -
                      id: 9973055e-ffaf-4410-9668-7b883676c3bb
                      number: '594599978'
                      name: 'Rafael Conroy'
                      from: Gottliebland
                      to: 'Port Ernest'
                      distance: 474.17
                      time: 2
                      slug: '594599978'
                      created_at: '2023-06-19T16:41:44.000000Z'
                      updated_at: '2023-06-19T16:41:44.000000Z'
                    -
                      id: 9973055f-131a-41fe-96ea-81a36309a8c9
                      number: '409'
                      name: 'Kristoffer Welch'
                      from: 'Lake Darrenshire'
                      to: 'Lake Giovannafurt'
                      distance: 939.92
                      time: 909774973
                      slug: '409'
                      created_at: '2023-06-19T16:41:44.000000Z'
                      updated_at: '2023-06-19T16:41:44.000000Z'
                    -
                      id: 9973055f-268c-44e7-8e88-683512ce3714
                      number: '65229923'
                      name: 'Ashleigh Wisozk'
                      from: 'South Hettieshire'
                      to: 'North Hettie'
                      distance: 994.91
                      time: 994288864
                      slug: '65229923'
                      created_at: '2023-06-19T16:41:44.000000Z'
                      updated_at: '2023-06-19T16:41:44.000000Z'
                    -
                      id: 9973055f-3a34-4095-898f-dcbb1c3a8db3
                      number: '784985664'
                      name: 'Kolby Bruen'
                      from: Pacochaborough
                      to: Reyesview
                      distance: 170.68
                      time: 603888971
                      slug: '784985664'
                      created_at: '2023-06-19T16:41:44.000000Z'
                      updated_at: '2023-06-19T16:41:44.000000Z'
                  first_page_url: 'http://localhost/api/v1/routes?page=1'
                  from: 1
                  last_page: 2
                  last_page_url: 'http://localhost/api/v1/routes?page=2'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://localhost/api/v1/routes?page=1'
                      label: '1'
                      active: true
                    -
                      url: 'http://localhost/api/v1/routes?page=2'
                      label: '2'
                      active: false
                    -
                      url: 'http://localhost/api/v1/routes?page=2'
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: 'http://localhost/api/v1/routes?page=2'
                  path: 'http://localhost/api/v1/routes'
                  per_page: 15
                  prev_page_url: null
                  to: 15
                  total: 20
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 9973055d-39f2-4302-8402-30477ae02d6d
                        number: '33321242'
                        name: 'Mozell Spencer'
                        from: Langton
                        to: 'North Helenburgh'
                        distance: 528.63
                        time: 333601533
                        slug: '33321242'
                        created_at: '2023-06-19T16:41:42.000000Z'
                        updated_at: '2023-06-19T16:41:42.000000Z'
                      -
                        id: 9973055d-74e6-4a9f-9791-a5b8608f37ec
                        number: '7'
                        name: 'Trevion Streich'
                        from: Levistad
                        to: Dibbertbury
                        distance: 749.81
                        time: 227982835
                        slug: '7'
                        created_at: '2023-06-19T16:41:42.000000Z'
                        updated_at: '2023-06-19T16:41:42.000000Z'
                      -
                        id: 9973055d-abd7-48e6-970a-f47b50b5c084
                        number: '569'
                        name: 'Lamar Dickens'
                        from: 'West Tonyfurt'
                        to: 'South Ezra'
                        distance: 978.33
                        time: 1
                        slug: '569'
                        created_at: '2023-06-19T16:41:43.000000Z'
                        updated_at: '2023-06-19T16:41:43.000000Z'
                      -
                        id: 9973055e-7141-495b-9670-13c1e5818f78
                        number: '68115'
                        name: 'Maverick Bins PhD'
                        from: 'Port Jessicaview'
                        to: Windlerchester
                        distance: 26.19
                        time: 9
                        slug: '68115'
                        created_at: '2023-06-19T16:41:43.000000Z'
                        updated_at: '2023-06-19T16:41:43.000000Z'
                      -
                        id: 9973055e-848d-426b-b0ea-ae3d19f3cfc7
                        number: '836215997'
                        name: 'Aniya Moen'
                        from: 'North Sydney'
                        to: Pearlchester
                        distance: 481.22
                        time: 6
                        slug: '836215997'
                        created_at: '2023-06-19T16:41:43.000000Z'
                        updated_at: '2023-06-19T16:41:43.000000Z'
                      -
                        id: 9973055e-93de-4375-a015-96a96af4ec7c
                        number: '97308'
                        name: 'Bridgette Hoeger'
                        from: 'Port Malloryborough'
                        to: Welchfurt
                        distance: 600.97
                        time: 593
                        slug: '97308'
                        created_at: '2023-06-19T16:41:43.000000Z'
                        updated_at: '2023-06-19T16:41:43.000000Z'
                      -
                        id: 9973055e-a72b-4ed6-8201-cbf58210bf2e
                        number: '11075'
                        name: 'Clotilde Auer'
                        from: Dayneberg
                        to: 'Lake Federicofurt'
                        distance: 444.95
                        time: 3890447
                        slug: '11075'
                        created_at: '2023-06-19T16:41:43.000000Z'
                        updated_at: '2023-06-19T16:41:43.000000Z'
                      -
                        id: 9973055e-bac5-45bc-87b0-9d702540cf20
                        number: '47378'
                        name: 'Prof. Kristopher Nikolaus I'
                        from: Lemketown
                        to: Danielland
                        distance: 405.54
                        time: 505897
                        slug: '47378'
                        created_at: '2023-06-19T16:41:43.000000Z'
                        updated_at: '2023-06-19T16:41:43.000000Z'
                      -
                        id: 9973055e-ce0a-4fd2-ba2a-3717abcf1ba8
                        number: '598334576'
                        name: 'Dr. Maria Armstrong'
                        from: 'South Leslieland'
                        to: Ofeliaville
                        distance: 185.92
                        time: 50565
                        slug: '598334576'
                        created_at: '2023-06-19T16:41:43.000000Z'
                        updated_at: '2023-06-19T16:41:43.000000Z'
                      -
                        id: 9973055e-e1a7-4284-962c-94732f4ad3cb
                        number: '61097'
                        name: 'Stephon Stark'
                        from: Fredrickview
                        to: 'Port Ena'
                        distance: 817.14
                        time: 9123616
                        slug: '61097'
                        created_at: '2023-06-19T16:41:43.000000Z'
                        updated_at: '2023-06-19T16:41:43.000000Z'
                      -
                        id: 9973055e-f4f2-44da-b580-5b7bb86a9c01
                        number: '353662832'
                        name: 'Autumn Koch'
                        from: Jacobsshire
                        to: 'South Samara'
                        distance: 860.98
                        time: 295
                        slug: '353662832'
                        created_at: '2023-06-19T16:41:43.000000Z'
                        updated_at: '2023-06-19T16:41:43.000000Z'
                      -
                        id: 9973055e-ffaf-4410-9668-7b883676c3bb
                        number: '594599978'
                        name: 'Rafael Conroy'
                        from: Gottliebland
                        to: 'Port Ernest'
                        distance: 474.17
                        time: 2
                        slug: '594599978'
                        created_at: '2023-06-19T16:41:44.000000Z'
                        updated_at: '2023-06-19T16:41:44.000000Z'
                      -
                        id: 9973055f-131a-41fe-96ea-81a36309a8c9
                        number: '409'
                        name: 'Kristoffer Welch'
                        from: 'Lake Darrenshire'
                        to: 'Lake Giovannafurt'
                        distance: 939.92
                        time: 909774973
                        slug: '409'
                        created_at: '2023-06-19T16:41:44.000000Z'
                        updated_at: '2023-06-19T16:41:44.000000Z'
                      -
                        id: 9973055f-268c-44e7-8e88-683512ce3714
                        number: '65229923'
                        name: 'Ashleigh Wisozk'
                        from: 'South Hettieshire'
                        to: 'North Hettie'
                        distance: 994.91
                        time: 994288864
                        slug: '65229923'
                        created_at: '2023-06-19T16:41:44.000000Z'
                        updated_at: '2023-06-19T16:41:44.000000Z'
                      -
                        id: 9973055f-3a34-4095-898f-dcbb1c3a8db3
                        number: '784985664'
                        name: 'Kolby Bruen'
                        from: Pacochaborough
                        to: Reyesview
                        distance: 170.68
                        time: 603888971
                        slug: '784985664'
                        created_at: '2023-06-19T16:41:44.000000Z'
                        updated_at: '2023-06-19T16:41:44.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9973055d-39f2-4302-8402-30477ae02d6d
                        number:
                          type: string
                          example: '33321242'
                        name:
                          type: string
                          example: 'Mozell Spencer'
                        from:
                          type: string
                          example: Langton
                        to:
                          type: string
                          example: 'North Helenburgh'
                        distance:
                          type: number
                          example: 528.63
                        time:
                          type: integer
                          example: 333601533
                        slug:
                          type: string
                          example: '33321242'
                        created_at:
                          type: string
                          example: '2023-06-19T16:41:42.000000Z'
                        updated_at:
                          type: string
                          example: '2023-06-19T16:41:42.000000Z'
                  first_page_url:
                    type: string
                    example: 'http://localhost/api/v1/routes?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 2
                  last_page_url:
                    type: string
                    example: 'http://localhost/api/v1/routes?page=2'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/routes?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://localhost/api/v1/routes?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://localhost/api/v1/routes?page=2'
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: 'http://localhost/api/v1/routes?page=2'
                  path:
                    type: string
                    example: 'http://localhost/api/v1/routes'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 15
                  total:
                    type: integer
                    example: 20
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/routes/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the route.'
        example: 9973055d-39f2-4302-8402-30477ae02d6d
        required: true
        schema:
          type: string
  '/api/v1/bus-station/buses/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the bus.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/bus-station/trips:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                  description: ''
                  example: doloremque
                search_by:
                  type: object
                  description: ''
                  example: null
                  properties: []
                order_by:
                  type: string
                  description: 'Must be one of <code>asc</code> or <code>desc</code>.'
                  example: desc
                day:
                  type: string
                  description: 'Must be one of <code>Monday</code>, <code>Tuesday</code>, <code>Wednesday</code>, <code>Thursday</code>, <code>Friday</code>, <code>Saturday</code>, or <code>Sunday</code>.'
                  example: Wednesday
                search_busid:
                  type: string
                  description: ''
                  example: null
                search_start:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i:s</code>.'
                  example: '06:37:52'
                search_end:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i:s</code>.'
                  example: '06:37:52'
                search_route_id:
                  type: string
                  description: ''
                  example: null
                search_status:
                  type: string
                  description: ''
                  example: numquam
                search_to:
                  type: string
                  description: ''
                  example: null
                search_from:
                  type: string
                  description: ''
                  example: null
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                time_table_id:
                  type: string
                  description: ''
                  example: possimus
                bus_id:
                  type: string
                  description: ''
                  example: autem
                type:
                  type: string
                  description: ''
                  example: quas
                details:
                  type: string
                  description: ''
                  example: expedita
                location_id:
                  type: string
                  description: ''
                  example: et
                start:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i:s</code>.'
                  example: '06:37:52'
                end:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i:s</code>.'
                  example: '06:37:52'
                route_id:
                  type: string
                  description: ''
                  example: non
                distance:
                  type: number
                  description: ''
                  example: 140089.5492907
                status:
                  type: string
                  description: ''
                  example: corporis
                from:
                  type: string
                  description: ''
                  example: quia
                to:
                  type: string
                  description: ''
                  example: laudantium
              required:
                - time_table_id
                - bus_id
                - type
                - details
                - location_id
                - start
                - end
                - route_id
                - distance
                - status
                - from
                - to
      security: []
  '/api/v1/bus-station/trips/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                time_table_id:
                  type: string
                  description: ''
                  example: et
                bus_id:
                  type: string
                  description: ''
                  example: iste
                type:
                  type: string
                  description: ''
                  example: itaque
                details:
                  type: string
                  description: ''
                  example: laudantium
                location_id:
                  type: string
                  description: ''
                  example: eos
                start:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i:s</code>.'
                  example: '06:37:52'
                end:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i:s</code>.'
                  example: '06:37:52'
                route_id:
                  type: string
                  description: ''
                  example: ducimus
                distance:
                  type: number
                  description: ''
                  example: 1789633.427
                status:
                  type: string
                  description: ''
                  example: laboriosam
                from:
                  type: string
                  description: ''
                  example: et
                to:
                  type: string
                  description: ''
                  example: reprehenderit
              required:
                - time_table_id
                - bus_id
                - type
                - details
                - location_id
                - start
                - end
                - route_id
                - distance
                - status
                - from
                - to
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the trip.'
        example: 9976a717-9d07-46ba-ad8f-17efff1d89a6
        required: true
        schema:
          type: string
  /api/v1/bus-station/time-table:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: quo
                description:
                  type: string
                  description: ''
                  example: 'Velit soluta quasi molestiae unde quaerat.'
                bus_station_id:
                  type: string
                  description: ''
                  example: culpa
              required:
                - name
                - description
                - bus_station_id
      security: []
  '/api/v1/bus-station/time-table/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the time table.'
        example: ut
        required: true
        schema:
          type: string
  '/api/v1/bus-station/buses-add-driver/{bus_id}':
    patch:
      summary: ''
      operationId: patchApiV1BusStationBusesAddDriverBus_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                driver_id:
                  type: string
                  description: ''
                  example: voluptate
              required:
                - driver_id
      security: []
    parameters:
      -
        in: path
        name: bus_id
        description: 'The ID of the bus.'
        example: 9972e2e2-4e8e-407d-a7a1-ac3ac508689c
        required: true
        schema:
          type: string
  /api/v1/driver/trips:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                  description: ''
                  example: nihil
                search_by:
                  type: object
                  description: ''
                  example: null
                  properties: []
                order_by:
                  type: string
                  description: 'Must be one of <code>asc</code> or <code>desc</code>.'
                  example: desc
                day:
                  type: string
                  description: 'Must be one of <code>Monday</code>, <code>Tuesday</code>, <code>Wednesday</code>, <code>Thursday</code>, <code>Friday</code>, <code>Saturday</code>, or <code>Sunday</code>.'
                  example: Thursday
                search_busid:
                  type: string
                  description: ''
                  example: null
                search_start:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i:s</code>.'
                  example: '06:37:52'
                search_end:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i:s</code>.'
                  example: '06:37:52'
                search_route_id:
                  type: string
                  description: ''
                  example: null
                search_status:
                  type: string
                  description: ''
                  example: asperiores
                search_to:
                  type: string
                  description: ''
                  example: null
                search_from:
                  type: string
                  description: ''
                  example: null
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/driver/trips/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: ''
                  example: sunt
              required:
                - status
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the trip.'
        example: 9976a717-9d07-46ba-ad8f-17efff1d89a6
        required: true
        schema:
          type: string
  '/api/v1/driver/trips-status/{trip_id}':
    patch:
      summary: ''
      operationId: patchApiV1DriverTripsStatusTrip_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: ''
                  example: eos
              required:
                - status
      security: []
    parameters:
      -
        in: path
        name: trip_id
        description: 'The ID of the trip.'
        example: 9976a717-9d07-46ba-ad8f-17efff1d89a6
        required: true
        schema:
          type: string
  '/api/v1/driver/trips-location/{trip_id}':
    patch:
      summary: ''
      operationId: patchApiV1DriverTripsLocationTrip_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                  description: 'Must be between -90 and 90.'
                  example: -89
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
              required:
                - latitude
                - longitude
      security: []
    parameters:
      -
        in: path
        name: trip_id
        description: 'The ID of the trip.'
        example: 9976a717-9d07-46ba-ad8f-17efff1d89a6
        required: true
        schema:
          type: string
  /api/v1/admin/create-bus-station-user:
    post:
      summary: "Create a new bus station user.\n\nThis endpoint allows you to create a new bus station user.\nonly accessible by administrators or above"
      operationId: createANewBusStationUserThisEndpointAllowsYouToCreateANewBusStationUseronlyAccessibleByAdministratorsOrAbove
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    id: 1
                    name: 'John Doe'
                    email: johndoe@example.com
                    created_at: '2022-01-01 00:00:00'
                    updated_at: '2022-01-01 00:00:00'
                  token: xxxxxxxxxx
                  bus_station:
                    id: 1
                    name: 'Bus Station Name'
                    address: '123 Main St'
                    latitude: 40.7128
                    longitude: -74.006
                    user_id: 1
                    created_at: '2022-01-01 00:00:00'
                    updated_at: '2022-01-01 00:00:00'
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: johndoe@example.com
                      created_at:
                        type: string
                        example: '2022-01-01 00:00:00'
                      updated_at:
                        type: string
                        example: '2022-01-01 00:00:00'
                  token:
                    type: string
                    example: xxxxxxxxxx
                  bus_station:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Bus Station Name'
                      address:
                        type: string
                        example: '123 Main St'
                      latitude:
                        type: number
                        example: 40.7128
                      longitude:
                        type: number
                        example: -74.006
                      user_id:
                        type: integer
                        example: 1
                      created_at:
                        type: string
                        example: '2022-01-01 00:00:00'
                      updated_at:
                        type: string
                        example: '2022-01-01 00:00:00'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Internal Server Error'
                  message: 'General Exception'
                properties:
                  error:
                    type: string
                    example: 'Internal Server Error'
                  message:
                    type: string
                    example: 'General Exception'
      tags:
        - 'User Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user.'
                  example: natus
                email:
                  type: string
                  description: 'The email of the user.'
                  example: bette.kulas@example.net
                password:
                  type: string
                  description: 'The password of the user.'
                  example: '%(+H<fE+lu5j'
                name_of_station:
                  type: string
                  description: 'The name of the bus station.'
                  example: dignissimos
                address:
                  type: string
                  description: 'The address of the bus station.'
                  example: ducimus
                latitude:
                  type: numeric
                  description: 'The latitude of the bus station.'
                  example: quod
                longitude:
                  type: numeric
                  description: 'The longitude of the bus station.'
                  example: et
              required:
                - name
                - email
                - password
                - name_of_station
                - address
                - latitude
                - longitude
tags:
  -
    name: 'Bus Management'
    description: ''
  -
    name: 'Driver Management'
    description: "\nThis Consists All operations related to managing drivers and their accounts."
  -
    name: Endpoints
    description: ''
  -
    name: 'User Management'
    description: ''
